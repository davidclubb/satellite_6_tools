#!/bin/bash

# Incept 2015/05/28
# Author SDW
# Purpose: Configure firewall


# Include common_functions.h
if [[ -s /opt/sa/scripts/common_functions.sh ]]; then
   source /opt/sa/scripts/common_functions.sh
elif [[ -s common_functions.sh ]]; then
   source common_functions.sh
else
   echo "Critical dependency failure: unable to locate common_functions.h"
   exit
fi


# Define Variables
CP=/bin/cp
CAT=/bin/cat
RPM=/bin/rpm
EGREP=/bin/egrep
SYSTEMCTL=/bin/systemctl
FIREWALLCMD=/bin/firewall-cmd

# If the service isn't enabled, enable it
if [[ -n `$SYSTEMCTL is-enabled firewalld | grep "^disabled$"` ]]; then
   $SYSTEMCTL enable firewalld 2>&1 | >> /dev/null
fi

# If the service isn't started, start it
if [[ -n `$SYSTEMCTL is-active firewalld | grep "^inactive$"` ]]; then
   $SYSTEMCTL start firewalld 2>&1 | >> /dev/null
fi

if [[ -z `$SYSTEMCTL is-active firewalld | grep "^active$"` ]]; then
   if [[ -n $LOGFILE ]] && [[ -n $VTS ]]; then
      echo "`$VTS`:$0:FAILURE - unable to start the firewalld daemon" | $LOG1
   fi  
   exit 2
fi

ISNETUP=`f_IsNetUp`

if [[ $ISNETUP == NO ]]; then
   if [[ -n $LOGFILE ]] && [[ -n $VTS ]]; then
      echo "`$VTS`:$0:FAILURE - network is not reachable, unable to determine correct settings" | $LOG1
   fi
   echo "   FAILURE: network is not set up or not working."
   echo "            Please set up the network and ensure"
   echo "            it is working, then run this script again."
   exit 3
fi



# If the server is in the DMZ or fails the "On Intranet" check, then
# use the more restrictive settings.

echo "Checking environment."
echo "   On Intranet?: `f_OnIntranet`"
echo "           DMZ?: `f_InDMZ`"
OIN=`f_OnIntranet`
DMZ=`f_InDMZ`

## Make sure to reload the existing ruies before continuing
#$FIREWALLCMD --reload
#
## Allow SCOM ports
#$FIREWALLCMD --add-port=1270/tcp --permanent
#$FIREWALLCMD --add-port=5723/tcp --permanent
#
## Allow COMMVAULT SERVER
#$FIREWALLCMD --zone=trusted --add-source=10.252.241.10 --permanent
#
## Activate the new rules
#$FIREWALLCMD --reload

# Shut down the firewall
if [[ "`$SYSTEMCTL is-active firewalld 2>&1`" == "active" ]]; then $SYSTEMCTL stop firewalld; fi

ZONESDIR=/etc/firewalld/zones

# Build the Public Zone
ZF=public.xml

# Back up the old version of the config
if [[ -s "${ZONESDIR}/${ZF}" ]]; then $CP "${ZONESDIR}/${ZF}" "${ZONESDIR}/${ZF}.old"; fi

$CAT << EOF > "${ZONESDIR}/${ZF}" 
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <short>Public</short>
  <description>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description>
  <service name="dhcpv6-client"/>
  <service name="http"/>
  <service name="ssh"/>
  <port protocol="tcp" port="1270"/>
  <port protocol="tcp" port="5723"/>
</zone>

EOF


# Build the Trusted Zone
ZF=trusted.xml

# Back up the old version of the config
if [[ -s "${ZONESDIR}/${ZF}" ]]; then $CP "${ZONESDIR}/${ZF}" "${ZONESDIR}/${ZF}.old"; fi

$CAT << EOF > "${ZONESDIR}/${ZF}"
<?xml version="1.0" encoding="utf-8"?>
<zone target="ACCEPT">
  <short>Trusted</short>
  <description>All network connections are accepted.</description>
  <source address="10.252.241.10"/>
</zone>
EOF

# Re-start the firewall
$SYSTEMCTL start firewalld


